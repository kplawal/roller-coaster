{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Name</th>\n",
       "      <th>Park</th>\n",
       "      <th>Location</th>\n",
       "      <th>Supplier</th>\n",
       "      <th>Year Built</th>\n",
       "      <th>Points</th>\n",
       "      <th>Year of Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Boulder Dash</td>\n",
       "      <td>Lake Compounce</td>\n",
       "      <td>Bristol, Conn.</td>\n",
       "      <td>CCI</td>\n",
       "      <td>2000</td>\n",
       "      <td>1333</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>El Toro</td>\n",
       "      <td>Six Flags Great Adventure</td>\n",
       "      <td>Jackson, N.J.</td>\n",
       "      <td>Intamin</td>\n",
       "      <td>2006</td>\n",
       "      <td>1302</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Phoenix</td>\n",
       "      <td>Knoebels Amusement Resort</td>\n",
       "      <td>Elysburg, Pa.</td>\n",
       "      <td>Dinn/PTC-Schmeck</td>\n",
       "      <td>1985</td>\n",
       "      <td>1088</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>The Voyage</td>\n",
       "      <td>Holiday World</td>\n",
       "      <td>Santa Claus, Ind.</td>\n",
       "      <td>Gravity Group</td>\n",
       "      <td>2006</td>\n",
       "      <td>1086</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Thunderhead</td>\n",
       "      <td>Dollywood</td>\n",
       "      <td>Pigeon Forge, Tenn.</td>\n",
       "      <td>GCII</td>\n",
       "      <td>2004</td>\n",
       "      <td>923</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Ravine Flyer II</td>\n",
       "      <td>Waldameer</td>\n",
       "      <td>Erie, Pa.</td>\n",
       "      <td>Gravity Group</td>\n",
       "      <td>2008</td>\n",
       "      <td>712</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>Outlaw Run</td>\n",
       "      <td>Silver Dollar City</td>\n",
       "      <td>Branson, Mo.</td>\n",
       "      <td>Rocky Mountain</td>\n",
       "      <td>2013</td>\n",
       "      <td>599</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>The Beast</td>\n",
       "      <td>Kings Island</td>\n",
       "      <td>Kings Mills, Ohio</td>\n",
       "      <td>KECO</td>\n",
       "      <td>1979</td>\n",
       "      <td>555</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>Lightning Racer</td>\n",
       "      <td>Hersheypark</td>\n",
       "      <td>Hershey, Pa.</td>\n",
       "      <td>GCII</td>\n",
       "      <td>2000</td>\n",
       "      <td>364</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Shivering Timbers</td>\n",
       "      <td>Michigan’s Adventure</td>\n",
       "      <td>Muskegon, Mich.</td>\n",
       "      <td>CCI</td>\n",
       "      <td>1998</td>\n",
       "      <td>304</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank               Name                       Park             Location  \\\n",
       "0     1       Boulder Dash             Lake Compounce       Bristol, Conn.   \n",
       "1     2            El Toro  Six Flags Great Adventure        Jackson, N.J.   \n",
       "2     3            Phoenix  Knoebels Amusement Resort        Elysburg, Pa.   \n",
       "3     4         The Voyage              Holiday World    Santa Claus, Ind.   \n",
       "4     5        Thunderhead                  Dollywood  Pigeon Forge, Tenn.   \n",
       "5     6    Ravine Flyer II                  Waldameer            Erie, Pa.   \n",
       "6     7         Outlaw Run         Silver Dollar City         Branson, Mo.   \n",
       "7     8          The Beast               Kings Island    Kings Mills, Ohio   \n",
       "8     9    Lightning Racer                Hersheypark         Hershey, Pa.   \n",
       "9    10  Shivering Timbers       Michigan’s Adventure      Muskegon, Mich.   \n",
       "\n",
       "           Supplier  Year Built  Points  Year of Rank  \n",
       "0               CCI        2000    1333          2013  \n",
       "1           Intamin        2006    1302          2013  \n",
       "2  Dinn/PTC-Schmeck        1985    1088          2013  \n",
       "3     Gravity Group        2006    1086          2013  \n",
       "4              GCII        2004     923          2013  \n",
       "5     Gravity Group        2008     712          2013  \n",
       "6    Rocky Mountain        2013     599          2013  \n",
       "7              KECO        1979     555          2013  \n",
       "8              GCII        2000     364          2013  \n",
       "9               CCI        1998     304          2013  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "Golden_steel = pd.read_csv('Golden_Ticket_Award_Winners_Steel.csv')\n",
    "Golden_wood = pd.read_csv('Golden_Ticket_Award_Winners_Wood.csv')\n",
    "rc = pd.read_csv('roller_coasters.csv')\n",
    "Golden_wood.head(10)\n",
    "#rc.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Name\n",
       "American Thunder    1\n",
       "Balder              1\n",
       "Beast               1\n",
       "Blue Streak         3\n",
       "Boardwalk Bullet    1\n",
       "                   ..\n",
       "Wild One            1\n",
       "Wildfire            1\n",
       "Wodan               1\n",
       "Wood Coaster        1\n",
       "Wooden Warrior      1\n",
       "Name: Park, Length: 61, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_wood.groupby('Name').Park.nunique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "61"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_wood.Name.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Boulder Dash', 'El Toro', 'Phoenix', 'The Voyage', 'Thunderhead',\n",
       "       'Ravine Flyer II', 'Outlaw Run', 'The Beast', 'Lightning Racer',\n",
       "       'Shivering Timbers', 'Gold Striker', 'Balder', 'Lightning Rod',\n",
       "       'Goliath', 'Prowler', 'The Raven', 'The Legend', 'Giant Dipper',\n",
       "       'Colossos', 'Jack Rabbit', 'Thunderbolt', 'Cú Chulainn', 'Wodan',\n",
       "       'Troy', 'Comet', 'Cyclone', 'Wildfire', 'GhostRider',\n",
       "       'Playland Wooden Coaster', 'The Boss', 'Wild Mouse',\n",
       "       'American Thunder', 'White Lightning', 'Megafobia', 'Hades 360',\n",
       "       'Rampage', 'Blue Streak', 'Screamin’ Eagle', 'Tremors',\n",
       "       'Flying Turns', 'Racer', 'T Express', 'Twister', 'Wooden Warrior',\n",
       "       'Kentucky Rumbler', 'Wood Coaster', 'Boardwalk Bullet', 'Voyage',\n",
       "       'Beast', 'Mystic Timbers', 'Raven', 'Legend', 'Boss', 'Switchback',\n",
       "       'Grizzly (KD)', 'Grand National', 'Renegade', 'Rutschebanan',\n",
       "       'Grizzly', 'Wild One', 'Mine Blower'], dtype=object)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_wood.Name.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_wood.Supplier.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_steel.Supplier.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year of Rank\n",
       "2013    10\n",
       "2014    10\n",
       "2015    10\n",
       "2016    49\n",
       "2017    48\n",
       "2018    47\n",
       "Name: Rank, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_wood.groupby('Year of Rank').Rank.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year of Rank\n",
       "2013    10\n",
       "2014    10\n",
       "2015    10\n",
       "2016    45\n",
       "2017    45\n",
       "2018    49\n",
       "Name: Rank, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Golden_steel.groupby('Year of Rank').Rank.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "def rank_year(name,ranking_df):\n",
    "    coaster_ranking = ranking_df[(ranking_df['Name']== name)]\n",
    "    ax = plt.subplot()\n",
    "    ax.invert_yaxis()\n",
    "    plt.plot(coaster_ranking['Year of Rank'], coaster_ranking['Rank'], marker = 'o')\n",
    "    ax.set_xlabel('Year')\n",
    "    ax.set_ylabel('Ranking')\n",
    "    plt.legend([name])\n",
    "    plt.show()\n",
    "    \n",
    "print(rank_year('El Toro', Golden_wood))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "def rank_year(name,park_name,ranking_df):\n",
    "    coaster_ranking = ranking_df[(ranking_df['Name']== name)&(ranking_df['Park']== park_name)]\n",
    "    ax = plt.subplot()\n",
    "    ax.invert_yaxis()\n",
    "    plt.plot(coaster_ranking['Year of Rank'], coaster_ranking['Rank'], marker = 'o')\n",
    "    ax.set_xlabel('Year')\n",
    "    ax.set_ylabel('Ranking')\n",
    "    plt.legend([name])\n",
    "    plt.show()\n",
    "    \n",
    "print(rank_year('El Toro','Six Flags Great Adventure', Golden_wood))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "def rank_year(name,name2, park, park2):\n",
    "    coaster_ranking = Golden_wood[(Golden_wood['Name']== name)&(Golden_wood['Park'] == park)]\n",
    "    coaster_ranking2 = Golden_wood[(Golden_wood['Name']== name2)&(Golden_wood['Park'] == park2)]\n",
    "    ax = plt.subplot()\n",
    "    ax.invert_yaxis()\n",
    "    plt.plot(coaster_ranking['Year of Rank'], coaster_ranking['Rank'], marker = 'o')\n",
    "    plt.plot(coaster_ranking2['Year of Rank'], coaster_ranking['Rank'], marker = '*')\n",
    "    ax.set_xlabel('Year')\n",
    "    ax.set_ylabel('Ranking')\n",
    "    ax.set_yticks(range(5))\n",
    "    plt.legend([name,name2])\n",
    "    plt.show()\n",
    "    \n",
    "print(rank_year('El Toro','Boulder Dash' ,'Six Flags Great Adventure','Lake Compounce'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
